// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: copyfrom.go

package models

import (
	"context"
)

// iteratorForScheduleJobs implements pgx.CopyFromSource.
type iteratorForScheduleJobs struct {
	rows                 []ScheduleJobsParams
	skippedFirstNextCall bool
}

func (r *iteratorForScheduleJobs) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForScheduleJobs) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].JobID,
		r.rows[0].CreatedAt,
		r.rows[0].UpdatedAt,
		r.rows[0].Queue,
		r.rows[0].JobType,
		r.rows[0].Priority,
		r.rows[0].RunAt,
		r.rows[0].Args,
	}, nil
}

func (r iteratorForScheduleJobs) Err() error {
	return nil
}

func (q *Queries) ScheduleJobs(ctx context.Context, arg []ScheduleJobsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"arrower", "gue_jobs"}, []string{"job_id", "created_at", "updated_at", "queue", "job_type", "priority", "run_at", "args"}, &iteratorForScheduleJobs{rows: arg})
}
