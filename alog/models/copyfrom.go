// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: copyfrom.go

package models

import (
	"context"
)

// iteratorForLogRecords implements pgx.CopyFromSource.
type iteratorForLogRecords struct {
	rows                 []LogRecordsParams
	skippedFirstNextCall bool
}

func (r *iteratorForLogRecords) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForLogRecords) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Time,
		r.rows[0].UserID,
		r.rows[0].Log,
	}, nil
}

func (r iteratorForLogRecords) Err() error {
	return nil
}

func (q *Queries) LogRecords(ctx context.Context, arg []LogRecordsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"arrower", "log"}, []string{"time", "user_id", "log"}, &iteratorForLogRecords{rows: arg})
}
